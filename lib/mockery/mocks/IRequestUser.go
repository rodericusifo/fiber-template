// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IRequestUser is an autogenerated mock type for the IRequestUser type
type IRequestUser struct {
	mock.Mock
}

type IRequestUser_Expecter struct {
	mock *mock.Mock
}

func (_m *IRequestUser) EXPECT() *IRequestUser_Expecter {
	return &IRequestUser_Expecter{mock: &_m.Mock}
}

// CustomValidateRequestUser provides a mock function with no fields
func (_m *IRequestUser) CustomValidateRequestUser() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for CustomValidateRequestUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IRequestUser_CustomValidateRequestUser_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CustomValidateRequestUser'
type IRequestUser_CustomValidateRequestUser_Call struct {
	*mock.Call
}

// CustomValidateRequestUser is a helper method to define mock.On call
func (_e *IRequestUser_Expecter) CustomValidateRequestUser() *IRequestUser_CustomValidateRequestUser_Call {
	return &IRequestUser_CustomValidateRequestUser_Call{Call: _e.mock.On("CustomValidateRequestUser")}
}

func (_c *IRequestUser_CustomValidateRequestUser_Call) Run(run func()) *IRequestUser_CustomValidateRequestUser_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *IRequestUser_CustomValidateRequestUser_Call) Return(_a0 error) *IRequestUser_CustomValidateRequestUser_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *IRequestUser_CustomValidateRequestUser_Call) RunAndReturn(run func() error) *IRequestUser_CustomValidateRequestUser_Call {
	_c.Call.Return(run)
	return _c
}

// NewIRequestUser creates a new instance of IRequestUser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIRequestUser(t interface {
	mock.TestingT
	Cleanup(func())
}) *IRequestUser {
	mock := &IRequestUser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
